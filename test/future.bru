--!-- Figuring out β-reduction

{! 
import std
!}

-- FIXME
div := (Y{λλλλ(
       {-if  -} lt{3, 2}   --  a < b
       {-then-} pair{0, 3} -- <q , a>
       {-else-} (1 succ{0} sub{3,2} 2)
       )} INT{0}) :: 2

a := INT[0, 1, 2]

-- future syntax
{j--
{+ $l.$r
   -- BruSKI
   f := λλλ (2 (1 0)) :: 2
   -- Haskell
-- f    :: (b -> c) -> (a -> b) -> a -> c 
-- f x y = \z -> x (y z)
+}

putHead := formatChr . head               :: 1 -- this
putHead := (λλλ (2 (1 0))) formatChr head :: 1 -- into this

putHead :: 1
putHead := formatChr . head

formatStr      :: 1
formatStr{nil} := I
formatStr      := λ (putHead{0} formatStr{tail{0}})

formatStr{a} -- the (!!) operator is reduntant

--}

!! λ0
